---
layout: default
modal-id: 2
date: 2014-07-17
img: username.png
alt: image-alt
imgTwo: bufferOverflow.png
alt: image-alt-2
imgThree: usernameResults.png
alt: image-alt-3
project-date: April 2022
language: C++
category: Algorithms and Data
github: <a href="https://github.com/spowers0409/username.git"><li>Username</li></a>
description1: <strong> Briefly describe the artifact.  </strong>The artifact that I have chosen is from CS-405 - Secure Coding, and is meant to display how a program will cancel out if too long of a value is entered. Currently the maximum value to be able to get the answer that the application is seeking is 20 characters long. If one is to type over 20 characters then the application will cancel out. You will see in the below image how the original project was created before I made my additions to it.
description2: <strong> Justify the inclusion of the artifact in your ePortfolio. </strong>I chose to go with this project because it seemed like something that could be used in the real world, as a means of logging into a database or an account of sorts. I decided that I wanted to add on to this program and recreate it in a way that can give someone an access code to gain entry into something based on who they are and if their name is recognized. I wanted to display that I can not only make a program more complex, but more meaningful as it has real world similarities. This project also displays the necessary skills to be able to show security in coding by testing against and array which could be from a database, and displays the proper use of boolean methods, if/else statements, and how a program can compare user input information to what is set inside an array.                                                                           
description3: <strong> Reflect on the process of enhancing the artifact. </strong>Starting out with creating this project, I thought it would be pretty simple to add in if /else statements to read whether what was input from the user matched what was in the array. The problem that I kept coming across was that when correct information was put in from the user, it would print out the information several times. I knew this was from the search loop but I could not understand how to correct it. First I tried to change the number of iterations, but this of course would only allow the loop to look through the array however many times was in the statement, and eventually would not print out what I was trying to accomplish. Then it dawned on me that I needed to use boolean methods to verify whether a match found was true or false. After adding in the boolean method the project worked as I had imagined it be.
description4: <strong> List of enhancements performed. </strong> <ul><li>Added "using namespace std" with the includes</li><li>Created an array with three strings</li><li>Changed char user_input to string str_input</li><li>Added rand() to produce a random number</li><li>Instead of verifying user_input is less than 20 characters, added a boolean operator to verify user_input matches a string inside the array</li><li>rand() will print out a random number if there is a match</li></ul>
---
